---
app_user: deploy
app_group: deploy
app_port: 9000
app_name: app
app_src: "../src/"

docker_users: ["{{ app_user }}"]

app_build_directory: ../ansible/builds
app_openapi: true
command_phpunit: "phpunit --coverage-clover {{ app_build_directory }}/phpunit.coverage.xml --log-junit {{ app_build_directory }}/phpunit.report.xml"
phpunit_enabled: true

build_filename: builds/build
build_format: zip
build_clear: false

app_extra_parameters: |
  location /api/v1/users {
      if ($request_method ~* "(GET|POST)") {
         add_header "Access-Control-Allow-Origin"  *;
      }

      if ($request_method = OPTIONS ) {
         add_header "Access-Control-Allow-Origin"  *;
         add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS, HEAD";
         add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
         return 200;
      }

     if ($request_method ~* GET) {
        content_by_lua_file /var/www/{{app_name}}/current/app/Lua/app.lua;
     }
     try_files $uri $uri/ /index.php?$query_string;
  }

  location / {
      try_files $uri $uri/ /index.php?$query_string;
  }

  location ~ \.php$ {

      if ($request_method ~* "(GET|POST)") {
         add_header "Access-Control-Allow-Origin"  *;
      }

      if ($request_method = OPTIONS ) {
         add_header "Access-Control-Allow-Origin"  *;
         add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS, HEAD";
         add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
         return 200;
      }

      fastcgi_split_path_info ^(.+\.php)(/.+)$;
      fastcgi_pass 127.0.0.1:{{app_port}};
      fastcgi_index index.php;
      fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
      include fastcgi_params;
  }

app_sandbox_enabled: true

user_password: "{{ vault_user_password | default('') }}"

app_nginx_extensions:
 - lua-nginx-redis

nginx_package_name: nginx-extras
nginx_extra_conf_options: |
  include /etc/nginx/modules-enabled/10-mod-http-ndk.conf;
  include /etc/nginx/modules-enabled/50-mod-http-lua.conf;

nginx_user: "{{app_user}}"
nginx_remove_default_vhost: true
nginx_vhosts:
  - listen: 80
    server_name: default
    root: /var/www/{{app_name}}/current/public
    index: "index.php"
    extra_parameters: "{{app_extra_parameters}}"

  - listen: 80
    server_name: demo.evarun.ru
    root: /var/www/{{app_name}}/current/public
    index: "index.php"
    extra_parameters: "{{app_extra_parameters}}"

  - listen: 8077
    server_name: sandbox
    root: /var/www/{{app_name}}/sandbox/public
    index: "index.php"
    extra_parameters: "{{app_extra_parameters}}"

php_fpm_version: 7.2
php_fpm_service_name: php{{php_fpm_version}}-fpm

php_fpm_pools:
 - name: "{{app_name}}"
   user: "{{app_user}}"
   group: "{{app_group}}"
   listen: "{{app_port}}"
   chdir: /

app_db: true
app_mysql_username: app_user
app_mysql_database: eva
app_mysql_password: "{{vault_app_mysql_password}}"

app_cron: true

app_aws_access_key_id: "{{vault_app_aws_access_key_id}}"
app_secret_access_key: "{{vault_app_secret_access_key}}"
app_aws_default_region: eu-central-1
app_aws_bucket: eva2020

app_backup: false
app_mail_driver: log
app_mailgun_domain: mg.evarun.ru
app_mailgun_secret: "{{vault_app_mailgun_secret}}"
